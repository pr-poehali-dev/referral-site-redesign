import { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Progress } from '@/components/ui/progress';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';
import Icon from '@/components/ui/icon';
import { useToast } from '@/hooks/use-toast';

const REFERRAL_API = 'https://functions.poehali.dev/48a1fc61-c1b4-41da-9d4b-2e0bd9dd8789';
const WITHDRAWAL_API = 'https://functions.poehali.dev/61f2a443-2e9f-4147-b9aa-cc99ba2fd219';

const Index = () => {
  const [activeTab, setActiveTab] = useState('card');
  const [isAdmin, setIsAdmin] = useState(false);
  const [adminCode, setAdminCode] = useState('');
  const [withdrawPhone, setWithdrawPhone] = useState('');
  const [withdrawBank, setWithdrawBank] = useState('');
  const [withdrawAmount, setWithdrawAmount] = useState('');
  const [withdrawDialogOpen, setWithdrawDialogOpen] = useState(false);
  const [loading, setLoading] = useState(true);
  const [userData, setUserData] = useState<any>(null);
  const [withdrawRequests, setWithdrawRequests] = useState<any[]>([]);
  
  const { toast } = useToast();
  const userId = localStorage.getItem('user_id') || `USER_${Date.now()}`;
  const alfaLink = 'https://alfa.me/ASQWHN';
  const ADMIN_CODE = '2025';
  
  const referralLink = userData?.user?.referral_code 
    ? `${window.location.origin}?ref=${userData.user.referral_code}`
    : `${window.location.origin}?ref=LOADING`;

  const stats = userData?.stats || {
    totalReferrals: 0,
    activeReferrals: 0,
    totalEarned: 0,
    pendingEarned: 0,
    completedReferrals: 0,
  };

  const referrals = userData?.referrals || [];

  const achievements = [
    { id: 1, title: '–ü–µ—Ä–≤—ã–π –¥—Ä—É–≥', description: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –¥—Ä—É–≥–∞', completed: false, icon: 'UserPlus' },
    { id: 2, title: '–û—Ç–ª–∏—á–Ω—ã–π —Å—Ç–∞—Ä—Ç', description: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ 5 –¥—Ä—É–∑–µ–π', completed: false, icon: 'Users' },
    { id: 3, title: '–≠–∫—Å–ø–µ—Ä—Ç', description: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ 10 –¥—Ä—É–∑–µ–π', completed: false, icon: 'Award' },
    { id: 4, title: '–õ–µ–≥–µ–Ω–¥–∞', description: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ 25 –¥—Ä—É–∑–µ–π', completed: false, icon: 'Crown' },
  ];

  useEffect(() => {
    const params = new URLSearchParams(window.location.search);
    const refCode = params.get('ref');
    
    if (!localStorage.getItem('user_id')) {
      localStorage.setItem('user_id', userId);
      if (refCode) {
        localStorage.setItem('referred_by', refCode);
      }
    }
    
    registerOrFetchUser();
  }, []);
  
  const registerOrFetchUser = async () => {
    try {
      const storedUserId = localStorage.getItem('user_id');
      const referredBy = localStorage.getItem('referred_by');
      
      const checkResponse = await fetch(`${REFERRAL_API}?user_id=${storedUserId}`);
      
      if (checkResponse.status === 404) {
        const registerResponse = await fetch(REFERRAL_API, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            action: 'register',
            user_id: storedUserId,
            referred_by: referredBy
          })
        });
        
        if (registerResponse.ok) {
          localStorage.removeItem('referred_by');
        }
      }
      
      await fetchUserData();
    } catch (error) {
      console.error('Error:', error);
      toast({
        title: '‚ùå –û—à–∏–±–∫–∞',
        description: '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ',
        variant: 'destructive'
      });
    } finally {
      setLoading(false);
    }
  };
  
  const fetchUserData = async () => {
    try {
      const response = await fetch(`${REFERRAL_API}?user_id=${userId}`);
      if (response.ok) {
        const data = await response.json();
        setUserData(data);
      }
    } catch (error) {
      console.error('Error fetching user data:', error);
    }
  };
  
  const fetchWithdrawRequests = async () => {
    try {
      const response = await fetch(`${WITHDRAWAL_API}?admin=true`);
      if (response.ok) {
        const data = await response.json();
        setWithdrawRequests(data.requests || []);
      }
    } catch (error) {
      console.error('Error fetching withdrawal requests:', error);
    }
  };

  const copyLink = () => {
    navigator.clipboard.writeText(referralLink);
    toast({
      title: 'üéâ –°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!',
      description: '–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –µ–π —Å –¥—Ä—É–∑—å—è–º–∏',
    });
  };

  const handleAdminLogin = async () => {
    if (adminCode === ADMIN_CODE) {
      setIsAdmin(true);
      await fetchWithdrawRequests();
      toast({
        title: '‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω',
        description: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å',
      });
    } else {
      toast({
        title: '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥',
        description: '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑',
        variant: 'destructive',
      });
    }
  };

  const handleWithdraw = async () => {
    if (!withdrawPhone || !withdrawBank || !withdrawAmount) {
      toast({
        title: '‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è',
        description: '–£–∫–∞–∂–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω, –±–∞–Ω–∫ –∏ —Å—É–º–º—É',
        variant: 'destructive',
      });
      return;
    }

    if (Number(withdrawAmount) > stats.totalEarned) {
      toast({
        title: '‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤',
        description: '–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –±–æ–ª—å—à–µ, —á–µ–º –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏',
        variant: 'destructive',
      });
      return;
    }

    try {
      const response = await fetch(WITHDRAWAL_API, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          user_id: userId,
          phone: withdrawPhone,
          bank: withdrawBank,
          amount: Number(withdrawAmount)
        })
      });
      
      if (response.ok) {
        toast({
          title: '‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!',
          description: '–û–∂–∏–¥–∞–π—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 1-3 –¥–Ω–µ–π',
        });
        
        setWithdrawDialogOpen(false);
        setWithdrawPhone('');
        setWithdrawBank('');
        setWithdrawAmount('');
      } else {
        const error = await response.json();
        toast({
          title: '‚ùå –û—à–∏–±–∫–∞',
          description: error.error || '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É',
          variant: 'destructive'
        });
      }
    } catch (error) {
      toast({
        title: '‚ùå –û—à–∏–±–∫–∞',
        description: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É',
        variant: 'destructive'
      });
    }
  };

  const handleApproveWithdraw = async (id: number) => {
    try {
      const response = await fetch(WITHDRAWAL_API, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ request_id: id, status: 'approved' })
      });
      
      if (response.ok) {
        toast({
          title: '‚úÖ –ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞',
          description: `–í—ã–ø–ª–∞—Ç–∞ #${id} –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞`,
        });
        await fetchWithdrawRequests();
      }
    } catch (error) {
      toast({
        title: '‚ùå –û—à–∏–±–∫–∞',
        description: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞—è–≤–∫—É',
        variant: 'destructive'
      });
    }
  };

  const handleRejectWithdraw = async (id: number) => {
    try {
      const response = await fetch(WITHDRAWAL_API, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ request_id: id, status: 'rejected' })
      });
      
      if (response.ok) {
        toast({
          title: '‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞',
          description: `–í—ã–ø–ª–∞—Ç–∞ #${id} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞`,
        });
        await fetchWithdrawRequests();
      }
    } catch (error) {
      toast({
        title: '‚ùå –û—à–∏–±–∫–∞',
        description: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞—è–≤–∫—É',
        variant: 'destructive'
      });
    }
  };
  
  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-purple-50 via-pink-50 to-orange-50 flex items-center justify-center">
        <div className="text-center space-y-4">
          <div className="w-16 h-16 border-4 border-primary border-t-transparent rounded-full animate-spin mx-auto"></div>
          <p className="text-muted-foreground">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-50 via-pink-50 to-orange-50">
      <div className="container mx-auto px-4 py-8 max-w-7xl">
        <Tabs value={activeTab} onValueChange={setActiveTab} className="w-full">
          <div className="flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-8">
            <div className="animate-fade-in">
              <h1 className="text-4xl md:text-5xl font-bold text-gradient mb-2">
                –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞
              </h1>
              <p className="text-muted-foreground text-lg">
                –ü–æ–ª—É—á–∏ 1000‚ÇΩ –∏ –ø—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π! üöÄ
              </p>
            </div>
            <TabsList className="grid grid-cols-3 w-full md:w-auto">
              <TabsTrigger value="card" className="gap-2">
                <Icon name="CreditCard" size={16} />
                –ö–∞—Ä—Ç–∞
              </TabsTrigger>
              <TabsTrigger value="home" className="gap-2">
                <Icon name="Gift" size={16} />
                –ü—Ä–æ–≥—Ä–∞–º–º–∞
              </TabsTrigger>
              <TabsTrigger value="cabinet" className="gap-2">
                <Icon name="LayoutDashboard" size={16} />
                –ö–∞–±–∏–Ω–µ—Ç
              </TabsTrigger>
            </TabsList>
          </div>

          <TabsContent value="card" className="space-y-8 mt-0">
            <div className="grid lg:grid-cols-2 gap-6 animate-scale-in">
              <Card className="bg-gradient-to-br from-emerald-500 via-green-500 to-teal-600 text-white border-0 shadow-2xl animate-pulse-glow overflow-hidden relative">
                <div className="absolute top-0 right-0 w-96 h-96 bg-white/10 rounded-full -mr-48 -mt-48"></div>
                <div className="absolute bottom-0 left-0 w-64 h-64 bg-white/10 rounded-full -ml-32 -mb-32"></div>
                <CardHeader className="relative z-10">
                  <div className="flex items-center justify-between mb-4">
                    <CardTitle className="text-4xl font-black">1000‚ÇΩ</CardTitle>
                    <Icon name="Sparkles" size={48} className="animate-bounce-coin" />
                  </div>
                  <CardDescription className="text-white/90 text-2xl font-bold">
                    –ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–∑—å—è! üåü
                  </CardDescription>
                </CardHeader>
                <CardContent className="relative z-10 space-y-6">
                  <p className="text-lg leading-relaxed">
                    –£ –Ω–∞—Å –æ—Ç–ª–∏—á–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å! –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å <span className="font-bold text-2xl">500‚ÇΩ</span> –æ—Ç –Ω–∞—Å –∏ –µ—â–µ{' '}
                    <span className="font-bold text-2xl">500‚ÇΩ</span> –æ—Ç –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫–∞! –í –∏—Ç–æ–≥–µ –≤–∞—à–∞ —Å—É–º–º–∞ —Å–æ—Å—Ç–∞–≤–∏—Ç{' '}
                    <span className="font-black text-3xl">1000‚ÇΩ</span>!
                  </p>

                  <div className="space-y-3 bg-white/10 backdrop-blur p-6 rounded-2xl">
                    <h3 className="text-xl font-bold mb-4">–ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å?</h3>
                    <div className="flex items-start gap-3">
                      <div className="w-8 h-8 rounded-full bg-white text-green-600 flex items-center justify-center font-bold shrink-0">
                        1
                      </div>
                      <p>–û—Ñ–æ—Ä–º–∏—Ç—å –ê–ª—å—Ñ–∞-–ö–∞—Ä—Ç—É –ø–æ –Ω–∞—à–µ–π —Å—Å—ã–ª–∫–µ</p>
                    </div>
                    <div className="flex items-start gap-3">
                      <div className="w-8 h-8 rounded-full bg-white text-green-600 flex items-center justify-center font-bold shrink-0">
                        2
                      </div>
                      <p>–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏</p>
                    </div>
                    <div className="flex items-start gap-3">
                      <div className="w-8 h-8 rounded-full bg-white text-green-600 flex items-center justify-center font-bold shrink-0">
                        3
                      </div>
                      <p>–°–¥–µ–ª–∞—Ç—å –ø–æ–∫—É–ø–∫—É –æ—Ç <span className="font-bold">200‚ÇΩ</span></p>
                    </div>
                  </div>
                </CardContent>
              </Card>

              <div className="space-y-6">
                <Card className="shadow-lg hover:shadow-2xl transition-all">
                  <CardHeader>
                    <CardTitle className="text-2xl flex items-center gap-2">
                      <Icon name="Gift" size={24} className="text-emerald-500" />
                      –î–≤–æ–π–Ω–∞—è –≤—ã–≥–æ–¥–∞!
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div className="p-4 bg-gradient-to-r from-purple-100 to-pink-100 rounded-xl">
                      <div className="flex items-center gap-3 mb-2">
                        <Icon name="Coins" size={24} className="text-primary" />
                        <span className="font-bold text-lg">500‚ÇΩ –æ—Ç –Ω–∞—Å</span>
                      </div>
                      <p className="text-sm text-muted-foreground">–ó–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã –ø–æ –Ω–∞—à–µ–π —Å—Å—ã–ª–∫–µ</p>
                    </div>
                    <div className="p-4 bg-gradient-to-r from-blue-100 to-cyan-100 rounded-xl">
                      <div className="flex items-center gap-3 mb-2">
                        <Icon name="Coins" size={24} className="text-blue-600" />
                        <span className="font-bold text-lg">500‚ÇΩ –æ—Ç –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫–∞</span>
                      </div>
                      <p className="text-sm text-muted-foreground">–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å –±–∞–Ω–∫–∞ –∑–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏—é</p>
                    </div>
                    <div className="pt-4 border-t-2 border-dashed">
                      <div className="flex items-center justify-between text-2xl font-black">
                        <span>–ò—Ç–æ–≥–æ:</span>
                        <span className="text-gradient">1000‚ÇΩ</span>
                      </div>
                    </div>
                  </CardContent>
                </Card>

                <Card className="shadow-lg">
                  <CardHeader>
                    <CardTitle className="text-xl flex items-center gap-2">
                      <Icon name="Clock" size={20} className="text-accent" />
                      –ë—ã—Å—Ç—Ä–æ –∏ –ø—Ä–æ—Å—Ç–æ
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-3">
                    <div className="flex items-center gap-3">
                      <Icon name="Check" size={20} className="text-green-600" />
                      <span>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞ 5 –º–∏–Ω—É—Ç –æ–Ω–ª–∞–π–Ω</span>
                    </div>
                    <div className="flex items-center gap-3">
                      <Icon name="Check" size={20} className="text-green-600" />
                      <span>–ë–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ</span>
                    </div>
                    <div className="flex items-center gap-3">
                      <Icon name="Check" size={20} className="text-green-600" />
                      <span>–ö—ç—à–±—ç–∫ –¥–æ 10% —Å –ø–æ–∫—É–ø–æ–∫</span>
                    </div>
                    <div className="flex items-center gap-3">
                      <Icon name="Check" size={20} className="text-green-600" />
                      <span>–ë–æ–Ω—É—Å—ã –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞</span>
                    </div>
                  </CardContent>
                </Card>
              </div>
            </div>

            <Card className="bg-gradient-to-r from-amber-50 to-orange-50 border-2 border-orange-200 shadow-lg">
              <CardContent className="p-6">
                <div className="flex flex-col md:flex-row items-center justify-between gap-4">
                  <div className="flex items-center gap-4">
                    <div className="w-16 h-16 rounded-full bg-gradient-to-br from-orange-400 to-red-500 flex items-center justify-center">
                      <Icon name="Rocket" size={32} className="text-white" />
                    </div>
                    <div>
                      <h3 className="text-2xl font-bold text-foreground">–ì–æ—Ç–æ–≤—ã –ø–æ–ª—É—á–∏—Ç—å 1000‚ÇΩ?</h3>
                      <p className="text-muted-foreground">–û—Ñ–æ—Ä–º–∏—Ç–µ –∫–∞—Ä—Ç—É –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!</p>
                    </div>
                  </div>
                  <Button
                    size="lg"
                    className="gradient-primary text-xl px-8 py-6 shadow-lg hover:shadow-xl transition-all animate-pulse-glow"
                    onClick={() => window.open(alfaLink, '_blank')}
                  >
                    <Icon name="CreditCard" size={24} />
                    –û—Ñ–æ—Ä–º–∏—Ç—å –∫–∞—Ä—Ç—É
                    <Icon name="ArrowRight" size={24} />
                  </Button>
                </div>
              </CardContent>
            </Card>

            <Card className="shadow-lg">
              <CardHeader>
                <CardTitle className="text-2xl flex items-center gap-2">
                  <Icon name="HelpCircle" size={24} className="text-primary" />
                  –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div>
                  <h4 className="font-bold mb-2">–ö–æ–≥–¥–∞ —è –ø–æ–ª—É—á—É –±–æ–Ω—É—Å—ã?</h4>
                  <p className="text-muted-foreground">
                    500‚ÇΩ –æ—Ç –Ω–∞—Å –ø–æ—Å—Ç—É–ø—è—Ç –ø–æ—Å–ª–µ —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –ø–µ—Ä–≤–æ–π –ø–æ–∫—É–ø–∫–∏. 500‚ÇΩ –æ—Ç –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫–∞ –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è —Å–æ–≥–ª–∞—Å–Ω–æ
                    —É—Å–ª–æ–≤–∏—è–º –±–∞–Ω–∫–∞.
                  </p>
                </div>
                <div>
                  <h4 className="font-bold mb-2">–ú–æ–∂–Ω–æ –ª–∏ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –±–æ–ª—å—à–µ?</h4>
                  <p className="text-muted-foreground">
                    –î–∞! –ü–æ—Å–ª–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∫–∞—Ä—Ç—ã –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Å–≤–æ—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –∏ —Å–º–æ–∂–µ—Ç–µ –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –¥—Ä—É–∑–µ–π,
                    –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—è –ø–æ 200‚ÇΩ –∑–∞ –∫–∞–∂–¥–æ–≥–æ!
                  </p>
                </div>
                <div>
                  <h4 className="font-bold mb-2">–ï—Å—Ç—å –ª–∏ —Å–∫—Ä—ã—Ç—ã–µ –ø–ª–∞—Ç–µ–∂–∏?</h4>
                  <p className="text-muted-foreground">
                    –ù–µ—Ç! –ö–∞—Ä—Ç–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –±–µ—Å–ø–ª–∞—Ç–Ω–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —É—Å–ª–æ–≤–∏–π –±–∞–Ω–∫–∞. –í—Å–µ –±–æ–Ω—É—Å—ã ‚Äî —ç—Ç–æ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–µ–Ω—å–≥–∏ –Ω–∞
                    –≤–∞—à—É –∫–∞—Ä—Ç—É.
                  </p>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="home" className="space-y-8 mt-0">
            <div className="grid md:grid-cols-2 gap-6 animate-scale-in">
              <Card className="gradient-primary text-white border-0 shadow-2xl animate-pulse-glow overflow-hidden relative">
                <div className="absolute top-0 right-0 w-64 h-64 bg-white/10 rounded-full -mr-32 -mt-32"></div>
                <CardHeader className="relative z-10">
                  <CardTitle className="text-3xl flex items-center gap-3">
                    <Icon name="Gift" size={32} />
                    –ü–æ–ª—É—á–∏—Ç–µ 200‚ÇΩ
                  </CardTitle>
                  <CardDescription className="text-white/90 text-lg">
                    –ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞, –∫–æ—Ç–æ—Ä—ã–π –æ—Ñ–æ—Ä–º–∏—Ç –∫–∞—Ä—Ç—É
                  </CardDescription>
                </CardHeader>
                <CardContent className="relative z-10">
                  <div className="space-y-4">
                    <div className="flex items-center gap-3 p-3 bg-white/20 rounded-lg backdrop-blur">
                      <Icon name="Check" size={20} />
                      <span>–î—Ä—É–≥ –æ—Ñ–æ—Ä–º–ª—è–µ—Ç –∫–∞—Ä—Ç—É</span>
                    </div>
                    <div className="flex items-center gap-3 p-3 bg-white/20 rounded-lg backdrop-blur">
                      <Icon name="Check" size={20} />
                      <span>–í—ã–ø–æ–ª–Ω—è–µ—Ç —É—Å–ª–æ–≤–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã</span>
                    </div>
                    <div className="flex items-center gap-3 p-3 bg-white/20 rounded-lg backdrop-blur">
                      <Icon name="Coins" size={20} className="animate-bounce-coin" />
                      <span className="font-bold text-xl">–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 200‚ÇΩ!</span>
                    </div>
                  </div>
                </CardContent>
              </Card>

              <Card className="shadow-lg hover:shadow-xl transition-shadow">
                <CardHeader>
                  <CardTitle className="text-2xl flex items-center gap-2">
                    <Icon name="Link" size={24} className="text-primary" />
                    –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞
                  </CardTitle>
                  <CardDescription>–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å –¥—Ä—É–∑—å—è–º–∏</CardDescription>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div className="flex gap-2">
                    <div className="flex-1 p-4 bg-muted rounded-lg font-mono text-sm break-all">
                      {referralLink}
                    </div>
                    <Button onClick={copyLink} size="lg" className="shrink-0 gradient-primary">
                      <Icon name="Copy" size={20} />
                    </Button>
                  </div>
                </CardContent>
              </Card>
            </div>

            <Card className="shadow-lg">
              <CardHeader>
                <CardTitle className="text-2xl flex items-center gap-2">
                  <Icon name="Trophy" size={24} className="text-accent" />
                  –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
                </CardTitle>
                <CardDescription>–ü—Ä–æ–≥—Ä–µ—Å—Å –∏ –Ω–∞–≥—Ä–∞–¥—ã</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid sm:grid-cols-2 lg:grid-cols-4 gap-4">
                  {achievements.map((achievement, index) => (
                    <div
                      key={achievement.id}
                      className={`p-4 rounded-lg border-2 transition-all hover:scale-105 ${
                        achievement.completed
                          ? 'gradient-primary text-white border-transparent shadow-lg'
                          : 'bg-muted border-dashed'
                      }`}
                      style={{ animationDelay: `${index * 0.1}s` }}
                    >
                      <div className="flex flex-col items-center text-center gap-2">
                        <Icon
                          name={achievement.icon as any}
                          size={32}
                          className={achievement.completed ? '' : 'text-muted-foreground'}
                        />
                        <h3 className="font-bold">{achievement.title}</h3>
                        <p className={`text-sm ${achievement.completed ? 'text-white/90' : 'text-muted-foreground'}`}>
                          {achievement.description}
                        </p>
                        {achievement.completed && (
                          <Badge className="bg-white/20 text-white border-0">
                            <Icon name="Check" size={12} />
                            –ü–æ–ª—É—á–µ–Ω–æ
                          </Badge>
                        )}
                      </div>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>

            <Card className="shadow-lg">
              <CardHeader>
                <CardTitle className="text-2xl flex items-center gap-2">
                  <Icon name="HelpCircle" size={24} className="text-primary" />
                  –£—Å–ª–æ–≤–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                <div className="flex items-start gap-3">
                  <Icon name="Circle" size={8} className="text-primary mt-2" />
                  <p className="text-muted-foreground">
                    –ë–æ–Ω—É—Å –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã–π –¥—Ä—É–≥ –æ—Ñ–æ—Ä–º–∏—Ç –∫–∞—Ä—Ç—É –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç —É—Å–ª–æ–≤–∏—è
                  </p>
                </div>
                <div className="flex items-start gap-3">
                  <Icon name="Circle" size={8} className="text-primary mt-2" />
                  <p className="text-muted-foreground">
                    –£—Å–ª–æ–≤–∏—è: —Å–æ–≤–µ—Ä—à–∏—Ç—å –ø–µ—Ä–≤—É—é –ø–æ–∫—É–ø–∫—É –Ω–∞ —Å—É–º–º—É –æ—Ç 1000‚ÇΩ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –¥–Ω–µ–π
                  </p>
                </div>
                <div className="flex items-start gap-3">
                  <Icon name="Circle" size={8} className="text-primary mt-2" />
                  <p className="text-muted-foreground">
                    –ë–æ–Ω—É—Å—ã –∑–∞—á–∏—Å–ª—è—é—Ç—Å—è –Ω–∞ –∫–∞—Ä—Ç—É –≤ —Ç–µ—á–µ–Ω–∏–µ 3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —É—Å–ª–æ–≤–∏–π
                  </p>
                </div>
                <div className="flex items-start gap-3">
                  <Icon name="Circle" size={8} className="text-primary mt-2" />
                  <p className="text-muted-foreground">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ</p>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="cabinet" className="space-y-6 mt-0">
            <div className="grid md:grid-cols-4 gap-4 animate-fade-in">
              <Card className="gradient-primary text-white border-0 shadow-lg">
                <CardHeader className="pb-3">
                  <CardTitle className="text-sm font-medium opacity-90">–í—Å–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–æ</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="text-4xl font-bold flex items-center gap-2">
                    <Icon name="Users" size={32} />
                    {stats.totalReferrals}
                  </div>
                </CardContent>
              </Card>

              <Card className="gradient-accent text-white border-0 shadow-lg">
                <CardHeader className="pb-3">
                  <CardTitle className="text-sm font-medium opacity-90">–í—ã–ø–æ–ª–Ω–∏–ª–∏ —É—Å–ª–æ–≤–∏—è</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="text-4xl font-bold flex items-center gap-2">
                    <Icon name="CheckCircle" size={32} />
                    {stats.completedReferrals}
                  </div>
                </CardContent>
              </Card>

              <Card className="bg-gradient-to-br from-green-500 to-emerald-600 text-white border-0 shadow-lg">
                <CardHeader className="pb-3">
                  <CardTitle className="text-sm font-medium opacity-90">–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="text-4xl font-bold flex items-center gap-2">
                    <Icon name="Coins" size={32} className="animate-bounce-coin" />
                    {stats.totalEarned}‚ÇΩ
                  </div>
                </CardContent>
              </Card>

              <Card className="bg-gradient-to-br from-amber-500 to-orange-600 text-white border-0 shadow-lg">
                <CardHeader className="pb-3">
                  <CardTitle className="text-sm font-medium opacity-90">–í –æ–∂–∏–¥–∞–Ω–∏–∏</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="text-4xl font-bold flex items-center gap-2">
                    <Icon name="Clock" size={32} />
                    {stats.pendingEarned}‚ÇΩ
                  </div>
                </CardContent>
              </Card>
            </div>

            {stats.totalEarned === 0 && referrals.length === 0 ? (
              <Card className="shadow-lg">
                <CardContent className="py-16">
                  <div className="flex flex-col items-center justify-center text-center space-y-4">
                    <div className="w-24 h-24 rounded-full bg-gradient-to-br from-purple-100 to-pink-100 flex items-center justify-center">
                      <Icon name="Users" size={48} className="text-primary" />
                    </div>
                    <h3 className="text-2xl font-bold">–ü–æ–∫–∞ –ø—É—Å—Ç–æ</h3>
                    <p className="text-muted-foreground max-w-md">
                      –ù–∞—á–Ω–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –¥—Ä—É–∑–µ–π, –∏ –∑–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–∞—Ö –∏ –∑–∞—Ä–∞–±–æ—Ç–∫–µ!
                    </p>
                    <Button size="lg" className="gradient-primary mt-4" onClick={copyLink}>
                      <Icon name="Share2" size={20} />
                      –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π
                    </Button>
                  </div>
                </CardContent>
              </Card>
            ) : (
              <>
                <Card className="shadow-lg">
                  <CardHeader>
                    <CardTitle className="text-2xl flex items-center gap-2">
                      <Icon name="TrendingUp" size={24} className="text-primary" />
                      –ü—Ä–æ–≥—Ä–µ—Å—Å –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
                    </CardTitle>
                    <CardDescription>–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –µ—â—ë {10 - stats.totalReferrals} –¥—Ä—É–∑–µ–π –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è "–≠–∫—Å–ø–µ—Ä—Ç"</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-3">
                      <Progress value={(stats.totalReferrals / 10) * 100} className="h-4" />
                      <div className="flex justify-between text-sm text-muted-foreground">
                        <span>{stats.totalReferrals} –∏–∑ 10</span>
                        <span>{Math.round((stats.totalReferrals / 10) * 100)}%</span>
                      </div>
                    </div>
                  </CardContent>
                </Card>

                <Card className="shadow-lg">
                  <CardHeader>
                    <CardTitle className="text-2xl flex items-center gap-2">
                      <Icon name="History" size={24} className="text-primary" />
                      –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π
                    </CardTitle>
                    <CardDescription>–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å—Ç–∞—Ç—É—Å –≤–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-3">
                      {referrals.map((referral, index) => (
                        <div
                          key={referral.id}
                          className="flex items-center justify-between p-4 rounded-lg border bg-card hover:shadow-md transition-shadow animate-fade-in"
                          style={{ animationDelay: `${index * 0.05}s` }}
                        >
                          <div className="flex items-center gap-4">
                            <div className="w-12 h-12 rounded-full gradient-primary flex items-center justify-center text-white font-bold text-lg">
                              {referral.name.charAt(referral.name.length - 1)}
                            </div>
                            <div>
                              <p className="font-semibold">{referral.name}</p>
                              <p className="text-sm text-muted-foreground">{referral.date}</p>
                            </div>
                          </div>
                          <div className="flex items-center gap-4">
                            {referral.status === 'completed' ? (
                              <>
                                <Badge className="bg-green-100 text-green-700 hover:bg-green-100">
                                  <Icon name="CheckCircle" size={14} />
                                  –í—ã–ø–æ–ª–Ω–µ–Ω–æ
                                </Badge>
                                <span className="font-bold text-green-600 text-lg">+{referral.earned}‚ÇΩ</span>
                              </>
                            ) : (
                              <>
                                <Badge className="bg-amber-100 text-amber-700 hover:bg-amber-100">
                                  <Icon name="Clock" size={14} />
                                  –û–∂–∏–¥–∞–Ω–∏–µ
                                </Badge>
                                <span className="font-semibold text-muted-foreground text-lg">‚Äî</span>
                              </>
                            )}
                          </div>
                        </div>
                      ))}
                    </div>
                  </CardContent>
                </Card>
              </>
            )}

            <div className="grid md:grid-cols-2 gap-4">
              <Dialog open={withdrawDialogOpen} onOpenChange={setWithdrawDialogOpen}>
                <DialogTrigger asChild>
                  <Button size="lg" className="gradient-primary h-16 text-lg" disabled={stats.totalEarned === 0}>
                    <Icon name="Wallet" size={24} />
                    –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ —á–µ—Ä–µ–∑ –°–ü–ë
                  </Button>
                </DialogTrigger>
                <DialogContent>
                  <DialogHeader>
                    <DialogTitle className="text-2xl">–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤</DialogTitle>
                    <DialogDescription>–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —á–µ—Ä–µ–∑ –°–∏—Å—Ç–µ–º—É –ë—ã—Å—Ç—Ä—ã—Ö –ü–ª–∞—Ç–µ–∂–µ–π</DialogDescription>
                  </DialogHeader>
                  <div className="space-y-4 mt-4">
                    <div>
                      <Label htmlFor="phone">–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</Label>
                      <Input
                        id="phone"
                        placeholder="+7 999 123-45-67"
                        value={withdrawPhone}
                        onChange={(e) => setWithdrawPhone(e.target.value)}
                      />
                    </div>
                    <div>
                      <Label htmlFor="bank">–ë–∞–Ω–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª—è</Label>
                      <Select value={withdrawBank} onValueChange={setWithdrawBank}>
                        <SelectTrigger>
                          <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –±–∞–Ω–∫" />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="sber">–°–±–µ—Ä–±–∞–Ω–∫</SelectItem>
                          <SelectItem value="tinkoff">–¢–∏–Ω—å–∫–æ—Ñ—Ñ</SelectItem>
                          <SelectItem value="alfa">–ê–ª—å—Ñ–∞-–ë–∞–Ω–∫</SelectItem>
                          <SelectItem value="vtb">–í–¢–ë</SelectItem>
                          <SelectItem value="raif">–†–∞–π—Ñ—Ñ–∞–π–∑–µ–Ω</SelectItem>
                          <SelectItem value="open">–û—Ç–∫—Ä—ã—Ç–∏–µ</SelectItem>
                        </SelectContent>
                      </Select>
                    </div>
                    <div>
                      <Label htmlFor="amount">–°—É–º–º–∞ –≤—ã–≤–æ–¥–∞</Label>
                      <Input
                        id="amount"
                        type="number"
                        placeholder="0"
                        value={withdrawAmount}
                        onChange={(e) => setWithdrawAmount(e.target.value)}
                      />
                      <p className="text-sm text-muted-foreground mt-1">–î–æ—Å—Ç—É–ø–Ω–æ: {stats.totalEarned}‚ÇΩ</p>
                    </div>
                    <Button className="w-full gradient-primary" onClick={handleWithdraw}>
                      <Icon name="Send" size={20} />
                      –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
                    </Button>
                  </div>
                </DialogContent>
              </Dialog>

              <Dialog>
                <DialogTrigger asChild>
                  <Button size="lg" variant="outline" className="h-16 text-lg border-2">
                    <Icon name="Shield" size={24} />
                    –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
                  </Button>
                </DialogTrigger>
                <DialogContent className="max-w-4xl max-h-[80vh] overflow-y-auto">
                  <DialogHeader>
                    <DialogTitle className="text-2xl">–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</DialogTitle>
                    <DialogDescription>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∞–º–∏ –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤</DialogDescription>
                  </DialogHeader>
                  {!isAdmin ? (
                    <div className="space-y-4 mt-4">
                      <div>
                        <Label htmlFor="adminCode">–ö–æ–¥ –¥–æ—Å—Ç—É–ø–∞</Label>
                        <Input
                          id="adminCode"
                          type="password"
                          placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥"
                          value={adminCode}
                          onChange={(e) => setAdminCode(e.target.value)}
                        />
                      </div>
                      <Button className="w-full gradient-primary" onClick={handleAdminLogin}>
                        <Icon name="LogIn" size={20} />
                        –í–æ–π—Ç–∏
                      </Button>
                    </div>
                  ) : (
                    <div className="space-y-4 mt-4">
                      <div className="flex justify-between items-center">
                        <h3 className="text-lg font-bold">–ó–∞—è–≤–∫–∏ –Ω–∞ –≤—ã–≤–æ–¥</h3>
                        <Badge className="bg-green-500 text-white">–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω</Badge>
                      </div>
                      <div className="space-y-3">
                        {withdrawRequests.map((request) => (
                          <Card key={request.id} className={`${
                            request.status === 'approved' ? 'bg-green-50 border-green-200' :
                            request.status === 'rejected' ? 'bg-red-50 border-red-200' :
                            'bg-amber-50 border-amber-200'
                          }`}>
                            <CardContent className="p-4">
                              <div className="flex flex-col md:flex-row md:items-center justify-between gap-4">
                                <div className="space-y-2">
                                  <div className="flex items-center gap-2">
                                    <Badge variant="outline">ID: {request.user}</Badge>
                                    <span className="text-sm text-muted-foreground">{request.date}</span>
                                  </div>
                                  <div className="grid grid-cols-2 gap-2 text-sm">
                                    <div>
                                      <span className="text-muted-foreground">–¢–µ–ª–µ—Ñ–æ–Ω:</span>
                                      <p className="font-mono">{request.phone}</p>
                                    </div>
                                    <div>
                                      <span className="text-muted-foreground">–ë–∞–Ω–∫:</span>
                                      <p className="font-semibold">{request.bank}</p>
                                    </div>
                                  </div>
                                  <div className="text-2xl font-bold text-gradient">
                                    {request.amount}‚ÇΩ
                                  </div>
                                </div>
                                {request.status === 'pending' && (
                                  <div className="flex gap-2">
                                    <Button
                                      size="sm"
                                      className="bg-green-600 hover:bg-green-700"
                                      onClick={() => handleApproveWithdraw(request.id)}
                                    >
                                      <Icon name="Check" size={16} />
                                      –ü—Ä–∏–Ω—è—Ç—å
                                    </Button>
                                    <Button
                                      size="sm"
                                      variant="destructive"
                                      onClick={() => handleRejectWithdraw(request.id)}
                                    >
                                      <Icon name="X" size={16} />
                                      –û—Ç–∫–ª–æ–Ω–∏—Ç—å
                                    </Button>
                                  </div>
                                )}
                                {request.status === 'approved' && (
                                  <Badge className="bg-green-600 text-white">
                                    <Icon name="CheckCircle" size={14} />
                                    –û–¥–æ–±—Ä–µ–Ω–æ
                                  </Badge>
                                )}
                                {request.status === 'rejected' && (
                                  <Badge className="bg-red-600 text-white">
                                    <Icon name="XCircle" size={14} />
                                    –û—Ç–∫–ª–æ–Ω–µ–Ω–æ
                                  </Badge>
                                )}
                              </div>
                            </CardContent>
                          </Card>
                        ))}
                      </div>
                    </div>
                  )}
                </DialogContent>
              </Dialog>
            </div>
          </TabsContent>
        </Tabs>

        <div className="grid md:grid-cols-3 gap-4 mt-8">
          <Button
            size="lg"
            variant="outline"
            className="gap-2 h-16 text-lg hover:bg-green-50 hover:border-green-500 hover:text-green-700 transition-all"
            onClick={() => window.open('https://wa.me/?text=' + encodeURIComponent(referralLink), '_blank')}
          >
            <Icon name="MessageCircle" size={24} className="text-green-600" />
            –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ WhatsApp
          </Button>
          <Button
            size="lg"
            variant="outline"
            className="gap-2 h-16 text-lg hover:bg-blue-50 hover:border-blue-500 hover:text-blue-700 transition-all"
            onClick={() => window.open('https://t.me/share/url?url=' + encodeURIComponent(referralLink), '_blank')}
          >
            <Icon name="Send" size={24} className="text-blue-600" />
            –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ Telegram
          </Button>
          <Button
            size="lg"
            variant="outline"
            className="gap-2 h-16 text-lg hover:bg-purple-50 hover:border-purple-500 hover:text-purple-700 transition-all"
            onClick={copyLink}
          >
            <Icon name="Copy" size={24} className="text-purple-600" />
            –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É
          </Button>
        </div>
      </div>
    </div>
  );
};

export default Index;